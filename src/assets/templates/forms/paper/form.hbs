import React, {createRef} from 'react';
import {Formik} from 'formik';
import * as Yup from 'yup';
import {View} from 'react-native';
import {Button, Text, TextInput, HelperText} from 'react-native-paper';
import {appStyle} from '../assets/styles/app';
import {formStyle} from '../assets/styles/form';
import {AlertUI, BlockUI, MainHelper} from '@codepso/rn-helper';

const {{formName}} = (props) => {
  const alertUI = createRef();
  const blockUI = createRef();

  const {{schemaName}} = Yup.object().shape({
    name: Yup.string().required('Enter your name')
  });

  const initialValues = {name: ''};
  const sleep = (m) => new Promise((r) => setTimeout(r, m));

  const onSend = async () => {
    blockUI.current.open(true);
    try {
      console.log(values);
      await sleep(1000);
      blockUI.current.open(false);
      alertUI.current.open('Success','Data has been sent',);
    } catch (error) {
      blockUI.current.open(false);
      let message = MainHelper.getError(error);
      alertUI.current.open('Snap!', message);
    }
  };

  return (
    <Formik
      enableReinitialize={true}
      initialValues={initialValues}
      validationSchema={{{validation: true}}}
      onSubmit={(values) => onSend(values)}>
      {(propsForm) => (
        <>
          <AlertUI ref={alertUI} />
          <BlockUI ref={blockUI} />
          <Text style={[appStyle.txtTitle, appStyle.setCenter]}>
            {{title}}
          </Text>
          <View style={formStyle.panForm}>
            <TextInput
              mode={'outlined'}
              placeholder={'Name'}
              value={propsForm.values.name}
              autoCapitalize={'none'}
              onChangeText={propsForm.handleChange('name')}
              onBlur={propsForm.handleBlur('email')}
            />
            <HelperText type="error">
              {propsForm.touched.name && propsForm.errors.name}
            </HelperText>
            <Button
              mode="contained"
              contentStyle={formStyle.btnMain}
              onPress={propsForm.handleSubmit}>
              SEND
            </Button>
          </View>
        </>
      )}
    </Formik>
  );
};

export default {{formName}};
